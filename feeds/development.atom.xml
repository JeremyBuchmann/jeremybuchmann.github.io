<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jeremy Buchmann - development</title><link href="http://jeremybuchmann.com/" rel="alternate"></link><link href="http://jeremybuchmann.com/feeds/development.atom.xml" rel="self"></link><id>http://jeremybuchmann.com/</id><updated>2018-08-09T18:25:00+02:00</updated><entry><title>Your Product Affects Your Customers AND Your Recruiting</title><link href="http://jeremybuchmann.com/your-product-affects-your-customers-and-your-recruiting.html" rel="alternate"></link><published>2018-08-09T18:25:00+02:00</published><updated>2018-08-09T18:25:00+02:00</updated><author><name>Jeremy Buchmann</name></author><id>tag:jeremybuchmann.com,2018-08-09:/your-product-affects-your-customers-and-your-recruiting.html</id><summary type="html">&lt;p&gt;Recently, I had a recruiter ask whether I was interested in a job at a large software company whose product I had used in the past. This product is a Really Big piece of software that required several training classes to learn how it worked and how to integrate it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I had a recruiter ask whether I was interested in a job at a large software company whose product I had used in the past. This product is a Really Big piece of software that required several training classes to learn how it worked and how to integrate it with other systems.&lt;/p&gt;
&lt;p&gt;The product itself was...mostly okay-ish. It was a business-flow product designed to meet the needs of almost any large organization, so it was enourmous, slow, confusing, tedious, and all the other things you think of when you think of these types of products.&lt;/p&gt;
&lt;p&gt;I don't remember how many courses I took to be able to work with the product, but I distinctly remember a situation where we were learning how to set up an integration or export process, and there was a form full of options to choose. One of the options had a drop-down of possible values like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;new CSV&lt;/li&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;li&gt;XML&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and I remember the trainer, fully aware of how ridiculous this was, said "Now, this is kind of silly, but you need to pick the second CSV, not the first one, and not the new one. Just remember, choose the second CSV option if you want CSV."&lt;/p&gt;
&lt;p&gt;Did someone green-light this into production? This was not some brand-new startup breaking things and moving fast. This was a multi-billion dollar enterprise software company. If this is what they put into production, what's their internal decision making like? What's their QA process?&lt;/p&gt;
&lt;p&gt;As a developer, seeing things like this in production makes that workplace seem like a dumpster fire. So if you do things like this, don't be surprised if people don't want to work for you.&lt;/p&gt;</content><category term="development"></category></entry><entry><title>How to get PHP to authenticate with AD using LDAPS</title><link href="http://jeremybuchmann.com/how-to-get-php-to-authenticate-with-ad-using-ldaps.html" rel="alternate"></link><published>2016-03-16T21:43:00+01:00</published><updated>2016-03-16T21:43:00+01:00</updated><author><name>Jeremy Buchmann</name></author><id>tag:jeremybuchmann.com,2016-03-16:/how-to-get-php-to-authenticate-with-ad-using-ldaps.html</id><summary type="html">&lt;p&gt;If you use Active Directory for authentication and also want to
authenticate to it from PHP code, there are a few hoops to jump through,
especially if you want to use LDAPS (LDAP over SSL/TLS). The clients
accomplish this from PHP using the php-ldap library which uses the
OpenLDAP …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you use Active Directory for authentication and also want to
authenticate to it from PHP code, there are a few hoops to jump through,
especially if you want to use LDAPS (LDAP over SSL/TLS). The clients
accomplish this from PHP using the php-ldap library which uses the
OpenLDAP library which in turn uses the OpenSSL library. I bring this up
because you’ll have to read some documentation from both OpenLDAP and
OpenSSL to understand what’s going on.&lt;/p&gt;
&lt;p&gt;When a client program tries to bind to the AD server, OpenSSL will try
to verify the server’s SSL certificate. SSL certificates are issued by a
Certificate Authority (CA) which have their own certificates to verify
their identities. However, if you have self-signed the certificate for
your AD server, the CA cert is essentially phony. This prevents OpenSSL
from verifying the connection which prevents OpenLDAP from connecting to
the AD server.&lt;/p&gt;
&lt;p&gt;There are two ways around this.&lt;/p&gt;
&lt;p&gt;One way is to tell OpenLDAP to not perform a check on the server’s
certificate. To do this, you &lt;em&gt;could&lt;/em&gt; add this directive to
&lt;code&gt;/etc/openldap/ldap.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;TLS_REQCERT never # Don’t actually do this!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But as the &lt;a href="http://www.openldap.org/doc/admin24/tls.html#Client%20Configuration"&gt;OpenLDAP manual
states&lt;/a&gt;,
“for clients the default value is &lt;code&gt;demand&lt;/code&gt; and there generally is no
good reason to change this setting”. So let’s not do that.&lt;/p&gt;
&lt;p&gt;Instead, we can provide the client with a copy of the server’s CA
certificate. Normally, this would come from Verisign or Thawte or
whoever you’d buy a server cert from, but since we’ve self-signed a cert
for the server, we’ve also created a cert for the CA...which is us.&lt;/p&gt;
&lt;p&gt;By providing this CA cert to the client, the client will believe that
the self-signed certificate is valid, which is what we want.&lt;/p&gt;
&lt;p&gt;The CA cert is a PEM file. Depending on your Linux distribution, the CA
cert file will go into &lt;code&gt;/etc/ssl/certs&lt;/code&gt; (Ubuntu),
&lt;code&gt;/etc/openldap/cacerts&lt;/code&gt; (Red Hat/CentOS 6), or &lt;code&gt;/etc/openldap/certs&lt;/code&gt;
(Red Hat/CentOS 7). The permissions on the PEM files must be be
world-readable (644), or you must create a special group, add the owner
of the process that is accessing the cert to the group, and set the
permission of the cert file to group-readable (640).&lt;/p&gt;
&lt;p&gt;There’s one more step. For whatever reason, OpenSSL expects these files
to be named in the form of HHHHHHHH.D, where each H is a hexadecimal
character and D is a single decimal digit. There’s a script in the
openssl-perl package called &lt;code&gt;c_rehash&lt;/code&gt; that creates symlinks in the
right format for you. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[root@host]# c_rehash /etc/openldap/certs
Doing /etc/openldap/certs
host-ca.pem =&amp;gt; 4d86282a.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you have the PEM files and the symlinks in the right place, the AD
authentication in your PHP script should work.&lt;/p&gt;
&lt;p&gt;Note: the c_rehash script is really doing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[root@host]# openssl x509 -hash -fingerprint -noout -in file.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and taking the first line of output to create the hash file name.&lt;/p&gt;</content><category term="development"></category></entry><entry><title>Five Tools Every Programmer Should Have (that aren't on a computer)</title><link href="http://jeremybuchmann.com/five-tools-every-programmer-should-have-that-arent-on-a-computer.html" rel="alternate"></link><published>2012-06-20T15:35:00+02:00</published><updated>2012-06-20T15:35:00+02:00</updated><author><name>Jeremy Buchmann</name></author><id>tag:jeremybuchmann.com,2012-06-20:/five-tools-every-programmer-should-have-that-arent-on-a-computer.html</id><summary type="html">&lt;h3&gt;1. Nail Clippers&lt;/h3&gt;
&lt;p&gt;&lt;img alt="nail clippers" src="http://jeremybuchmann.com/images/nail-clippers.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I have a confession to make. I can't type. Never learned. Most
programmers I've known couldn't type either, which is weird. You'd think
it'd be the first thing we learned. Even though the number of symbols in
code makes touch typing a little less effective (so I've …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;1. Nail Clippers&lt;/h3&gt;
&lt;p&gt;&lt;img alt="nail clippers" src="http://jeremybuchmann.com/images/nail-clippers.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I have a confession to make. I can't type. Never learned. Most
programmers I've known couldn't type either, which is weird. You'd think
it'd be the first thing we learned. Even though the number of symbols in
code makes touch typing a little less effective (so I've been told), we
still have to write documentation which is mostly words (you are writing
documentation, right? Good.) Even though I can't type, I'm a pretty fast
hunter-and-pecker. But what really kills my accuracy and speed is when
my fingernails get long enough to get in the way. Keep those babies
trimmed and those fingers flying.&lt;/p&gt;
&lt;h3&gt;2. A Good Chair&lt;/h3&gt;
&lt;p&gt;It goes without saying that you want to be comfortable while you work.
Some people are doing the
&lt;a href="http://lifehacker.com/5830748/why-i-switched-my-office-chair-with-an-exercise-ball-and-what-it-feels-like"&gt;exercise-ball-as-a-chair&lt;/a&gt;
thing while others are going for the &lt;a href="http://lifehacker.com/5735528/why-and-how-i-switched-to-a-standing-desk"&gt;standing
desk&lt;/a&gt;.
But most of us sit in chairs, and chairs vary widely in quality.&lt;/p&gt;
&lt;p&gt;I remember starting a new job some years back and when I was shown to my
desk, the chair was an old, worn out task chair that was missing a bolt
in the backrest which caused the backrest to hang down 90 degrees from
where it was supposed to be. It was the only chair they had for me and
let me tell you, it wasn't a pleasant way to spend eight hours.&lt;/p&gt;
&lt;p&gt;&lt;img alt="chair" src="http://jeremybuchmann.com/images/chair.jpg"&gt;
This is not the chair you're looking for.&lt;/p&gt;
&lt;p&gt;There are a
&lt;a href="http://www.codinghorror.com/blog/2008/07/investing-in-a-quality-programming-chair.html"&gt;ton&lt;/a&gt;
&lt;a href="http://techcrunch.com/2006/12/28/workspace-roundup-ergonomic-chairs/"&gt;of&lt;/a&gt;
&lt;a href="http://ehs.unc.edu/workplace_safety/ergonomics/chairs/"&gt;options&lt;/a&gt; out
there for the new chair buyer, but if you find all of those options
lacking, you could &lt;a href="http://www.arrickrobotics.com/chair/"&gt;make your own computer chair from a luxury car
seat&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;3. Coaster&lt;/h3&gt;
&lt;p&gt;Do you have a lot of papers scattered on your desk? And have you ever
set a cold drink down, not realizing you were setting it down on
something you were going to give to someone else? I bet they
didn't appreciate the nice wet ring on that report. Easy solution: a
coaster. Aside from allowing you to show off a little
&lt;a href="http://www.thegreenhead.com/2007/11/lego-coaster-set.php"&gt;personality&lt;/a&gt;
or &lt;a href="https://www.cafepress.co.uk/+funny+coasters"&gt;sense of
humor&lt;/a&gt;, it
carves out a little spot on your desk just for that bottle of Diet Mr
Pibb.&lt;/p&gt;
&lt;p&gt;&lt;img alt="coaster" src="http://jeremybuchmann.com/images/coaster.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;4. Hand Lotion&lt;/h3&gt;
&lt;p&gt;Working in Reno where it's not unusual to have single-digit humidity, my
hands dry out to the point that &lt;em&gt;I can't stretch my fingers fast enough
to maintain my normal typing speed&lt;/em&gt;. A little hand lotion goes a long
way toward keeping that word count high.&lt;/p&gt;
&lt;p&gt;&lt;img alt="lotion bottle" src="http://jeremybuchmann.com/images/lotion.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;5. Printed ASCII Chart&lt;/h3&gt;
&lt;p&gt;I've kept one of these on my wall for as long as I can remember. I just
used it the other day to troubleshoot some incorrectly encoded data we
were trying to import into our database. Good times with my old friend.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:ASCII-Table.svg"&gt;&lt;img alt="ASCII chart" src="http://jeremybuchmann.com/images/ascii-table.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Bonus: Plants&lt;/h3&gt;
&lt;p&gt;If you're the type that likes to work in a "hacker cave" (like a
man-cave, but for nerds...BTW, how great of a show would that be...are
you listening HGTV?), you may want to look into a little houseplant. Any
old plant will do, but did you know that there are plants that are
especially good at cleaning the air? &lt;a href="http://www.extension.umn.edu/yardandgarden/ygbriefs/h110indoorair.html"&gt;It's
true&lt;/a&gt;.&lt;/p&gt;</content><category term="development"></category></entry><entry><title>Creating Good SQL Aliases</title><link href="http://jeremybuchmann.com/creating-good-sql-aliases.html" rel="alternate"></link><published>2012-06-16T21:15:00+02:00</published><updated>2012-06-16T21:15:00+02:00</updated><author><name>Jeremy Buchmann</name></author><id>tag:jeremybuchmann.com,2012-06-16:/creating-good-sql-aliases.html</id><summary type="html">&lt;p&gt;I was reviewing someone else's code the other day and noticed something
that has been bugging me ever since I learned SQL (a good 10+ years
ago): bad SQL aliases.  Let me start with some non-SQL code as an
example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you saw this in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was reviewing someone else's code the other day and noticed something
that has been bugging me ever since I learned SQL (a good 10+ years
ago): bad SQL aliases.  Let me start with some non-SQL code as an
example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you saw this in a real-life program, you'd think that whoever wrote
it was either exceptionally lazy or didn't know what they were doing. In
this day and age, you expect good variable names, even if they're a bit
long.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numEmployees&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selectedEmployeeId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;companyName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Obviously, that's much better. So why do I keep seeing SQL queries that
look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tstamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;personnel_log&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
  &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
  &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modifier_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
  &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;approver_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tstamp&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2012-06-16 00:00:00 UTC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="k"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="k"&gt;TIME&lt;/span&gt; &lt;span class="k"&gt;ZONE&lt;/span&gt;
  &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%smith%&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%James%&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tstamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you're trying to figure out the meaning of the expressions in the
SELECT list or the WHERE clauses, you have to keep referring to the JOIN
sections to translate the a, b, c, and d aliases into their actual table
names. In small-ish queries such as this one, it's not a huge deal, but
when the queries start getting up to 50 or 100 lines, it becomes a real
chore to track down each letter alias. Now look at the same query with
just a few more keystrokes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;plog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;plog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tstamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;modder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;modder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;approver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;approver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;personnel_log&lt;/span&gt; &lt;span class="n"&gt;plog&lt;/span&gt;
  &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;employee&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;plog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
  &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;modder&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;plog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modifier_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;modder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
  &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;approver&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;plog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;approver_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;approver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;plog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tstamp&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2012-06-16 00:00:00 UTC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="k"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="k"&gt;TIME&lt;/span&gt; &lt;span class="k"&gt;ZONE&lt;/span&gt;
  &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;modder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%smith%&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;employee&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt; &lt;span class="k"&gt;ILIKE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%James%&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;approver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;approver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;plog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tstamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So much nicer! You know right away that the third SELECT expression is
the employee's first name and that the first ORDER clause is the
approver's last name.&lt;/p&gt;
&lt;p&gt;An SQL alias is much like a variable name. The better the name, the
easier it is to figure out what the code is trying to do.&lt;/p&gt;</content><category term="development"></category></entry></feed>